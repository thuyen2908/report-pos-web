# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Create tickets >> Add an existing customer to a new ticket and pay with Loyalty points
- Location: /home/circleci/project/e2e/pos-web/dist/bdd/create-tickets.feature.spec.js:26:3

# Error details

```
Error: Timed out 20000ms waiting for expect(locator).toBeVisible()

Locator: locator('div.MuiAlert-message').getByText('Ticket 216 deleted successfully.')
Expected: visible
Received: <element(s) not found>
Call log:
  - expect.toBeVisible with timeout 20000ms
  - waiting for locator('div.MuiAlert-message').getByText('Ticket 216 deleted successfully.')

    at TicketViewPage.voidTicket (/home/circleci/project/e2e/pos-web/src/steps/ticket-view.page.ts:82:5)
    at /home/circleci/project/e2e/pos-web/src/redundant-tickets.cleanup.ts:57:3
    at Object.cleanupRedundantTickets (/home/circleci/project/e2e/pos-web/src/redundant-tickets.cleanup.ts:62:2)
    at /home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/hooks/scenario.ts:138:5
    at runScenarioHook (/home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/hooks/scenario.ts:106:3)
    at runScenarioHooks (/home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/hooks/scenario.ts:94:7)
    at Object.exports.test.bddWorkerFixtures_1.test.extend.$afterEach (/home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/runtime/bddTestFixtures.ts:149:7)
```

# Page snapshot

```yaml
- banner:
  - img
  - list:
    - listitem: Timesheet
    - listitem: Check In
    - listitem: Tickets
    - listitem: Turn
    - listitem: Appointment
    - listitem: Quick Sale
    - listitem: Balance
  - text: Mar 20
  - list:
    - listitem: BLANC NAILS
    - listitem:
      - paragraph: ", , | (707) 707-1122"
      - text: "Thuyen Nguyen | Station: 1"
- list
- main:
  - text: CHECK-INS No Customer
  - tablist:
    - tab "NAILS" [selected]
    - tab "HAIR"
  - tabpanel:
    - list:
      - listitem:
        - img "item service Emily"
        - text: "#1 Emily 07:00 AM Turn: 0.0"
      - listitem: "S #2 Sandy 07:00 AM Turn: 0.0"
      - listitem: "E #3 Ethan 07:00 AM Turn: 0.0"
      - listitem: "T #4 Tom 07:00 AM Turn: 0.0"
      - listitem: "H #5 Hanna 07:00 AM Turn: 0.0"
      - listitem: "M #6 Maya 07:00 AM Turn: 0.0"
      - listitem: "B #7 Brian 07:00 AM Turn: 0.0"
      - listitem:
        - img "item service Owner"
        - text: "#8 Owner 06:47 AM Turn: 0.0"
      - listitem: "S #9 Sam 07:00 AM Turn: 0.0"
      - listitem: "J #10 Jack 07:00 AM Turn: 0.0"
      - listitem: "R #11 Ruby 07:00 AM Turn: 1.0"
      - listitem: "D #12 Dylan 07:00 AM Turn: 1.0"
      - listitem: "C #13 Christ 07:00 AM Turn: 1.0"
      - listitem: "L #14 Laura 07:00 AM Turn: 1.0"
      - listitem: "T #15 Tim 07:00 AM Turn: 1.0"
      - listitem: "K #16 Kelley 07:00 AM Turn: 1.0"
      - listitem: "S #17 Sophia 07:00 AM Turn: 2.0"
      - listitem: "A #18 Anna 07:00 AM Turn: 5.0"
      - listitem: "M #19 Mia 07:00 AM Turn: 13.0"
  - button "search"
  - list:
    - listitem:
      - button "Ready"
    - listitem:
      - button "In Service"
    - listitem:
      - button "Paid"
    - listitem:
      - button "All" [disabled]
  - list:
    - listitem: "S In Service #219 Sarah 08:19 AM - Now 20' Manicure $6.00"
    - listitem:
      - img "item service Emma"
      - text: "#224 Emma 08:20 AM - Now 0' Waiting $0.00"
    - listitem: "B #225 Bella 08:20 AM - Now 0' Waiting $0.00"
    - listitem: "L #226 Lisa 08:20 AM - Now 0' Waiting $0.00"
    - listitem: "K #227 Kim 08:20 AM - Now 0' Waiting $0.00"
    - listitem: "T #228 Tina 08:20 AM - Now 0' Waiting $0.00"
    - listitem: "H #229 Harry 08:20 AM - Now 0' Waiting $0.00"
- alert: "Ticket View #216 - xPOS Salon"
```

# Test source

```ts
   1 | import { expect } from '@playwright/test';
   2 | import { Fixture } from 'playwright-bdd/decorators';
   3 |
   4 | import { constants } from '#const';
   5 | import { PageId } from '#types';
   6 |
   7 | import { xPage } from './x.page';
   8 |
   9 | export
  10 | @Fixture('ticketViewPage')
  11 | class TicketViewPage extends xPage {
  12 | 	/**
  13 | 	 * The page title
  14 | 	 */
  15 | 	public static get TITLE() {
  16 | 		return 'Ticket View';
  17 | 	}
  18 |
  19 | 	override open() {
  20 | 		return this.page.goto(constants.PageUrl[PageId.TICKET_VIEW]);
  21 | 	}
  22 |
  23 | 	/**
  24 | 	 * A list of this page specific locators
  25 | 	 */
  26 | 	public override get locators() {
  27 | 		const { page } = this;
  28 |
  29 | 		return {
  30 | 			...super.locators,
  31 |
  32 | 			serviceList: page.locator('ul:has(> li.ItemService)'),
  33 |
  34 | 			voidButton: page.getByRole('button', { name: 'VOID TICKET' }),
  35 | 			voidReasonDialog: super.locators.dialog('SELECT VOID REASON'),
  36 | 		};
  37 | 	}
  38 |
  39 | 	/**
  40 | 	 * Get the current ticket number shown on the page header
  41 | 	 */
  42 | 	public async getTicketNumber() {
  43 | 		const pageDetail = await this.locators.pageDetail.textContent();
  44 |
  45 | 		return pageDetail?.split('#')[1]?.trim();
  46 | 	}
  47 |
  48 | 	/**
  49 | 	 * Void the current ticket on screen
  50 | 	 */
  51 | 	public async voidTicket() {
  52 | 		const { locators } = this;
  53 |
  54 | 		// store the ticket number for later assertion
  55 | 		const ticketNumber = await this.getTicketNumber();
  56 |
  57 | 		// click the void button
  58 | 		await locators.voidButton.click();
  59 | 		const voidReasonDialog = locators.voidReasonDialog;
  60 | 		const voidTicketConfirmDialog = locators.dialog('VOID TICKET');
  61 |
  62 | 		// wait for 1 of 2 dialog types to be visible
  63 | 		await expect(voidReasonDialog.or(voidTicketConfirmDialog)).toBeVisible();
  64 |
  65 | 		if (await voidReasonDialog.isVisible()) {
  66 | 			// in case there're services already added to ticket
  67 | 			// select a reason for voiding the ticket
  68 | 			await voidReasonDialog.getByText('Mistake').click();
  69 |
  70 | 			// waiting for the subsequent confirm dialog to be visible
  71 | 			const confirmDialog = locators.draggableDialog('CONFIRM VOID');
  72 | 			await expect(confirmDialog).toBeVisible();
  73 |
  74 | 			await confirmDialog.getByRole('button', { name: 'CONFIRM' }).click();
  75 | 		} else {
  76 | 			// in case there're no services added to ticket
  77 | 			await voidTicketConfirmDialog.getByRole('button', { name: 'OK' }).click();
  78 | 		}
  79 |
  80 | 		await expect(
  81 | 			locators.toast.getByText(`Ticket ${ticketNumber} deleted successfully.`),
> 82 | 		).toBeVisible();
     | 		  ^ Error: Timed out 20000ms waiting for expect(locator).toBeVisible()
  83 | 	}
  84 |
  85 | 	/* -------------------------------- BDD steps ------------------------------- */
  86 | }
  87 |
```