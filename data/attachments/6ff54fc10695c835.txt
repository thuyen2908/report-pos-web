# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Reopen tickets >> Reopen ticket to change tech for service package
- Location: /home/circleci/project/e2e/pos-web/dist/bdd/reopen-ticket.feature.spec.js:43:3

# Error details

```
Error: locator.click: Test timeout of 90000ms exceeded.
Call log:
  - waiting for locator('.MuiDataGrid-row').filter({ has: locator('[data-field="customerInfo"]').filter({ hasText: 'Bill' }) }).last()
    - locator resolved to <div role="row" data-rowindex="8" aria-rowindex="10" aria-selected="false" class="super-app-theme-- MuiDataGrid-row" data-id="corp11.store517.bb4943df-a60b-4545-9cd1-d046dc337a1e">…</div>
  - attempting click action
    - waiting for element to be visible, enabled and stable
    - element is visible, enabled and stable
    - scrolling into view if needed
    - done scrolling
    - <div class="MuiDataGrid-footerCell css-10zc4xt">$340.82</div> from <div role="presentation" class="MuiDataGrid-bottomContainer MuiDataGrid-container--bottom css-14egwce">…</div> subtree intercepts pointer events
  - retrying click action
    - waiting for element to be visible, enabled and stable
    - element is visible, enabled and stable
    - scrolling into view if needed
    - done scrolling
    - <div role="row" data-rowindex="9" aria-rowindex="11" aria-selected="false" data-id="auto-generated-group-footer-root" class="super-app-theme-- MuiDataGrid-row MuiDataGrid-row--lastVisible">…</div> from <div role="presentation" class="MuiDataGrid-bottomContainer MuiDataGrid-container--bottom css-14egwce">…</div> subtree intercepts pointer events
  - retrying click action
    - waiting 20ms
    - waiting for element to be visible, enabled and stable
  - element was detached from the DOM, retrying

    at Object.<anonymous> (/home/circleci/project/e2e/pos-web/src/features/steps.ts:965:17)
    at /home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/runtime/bddStepInvoker.ts:57:22
    at BddStepInvoker.invoke (/home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/runtime/bddStepInvoker.ts:51:5)
    at /home/circleci/project/e2e/pos-web/dist/bdd/reopen-ticket.feature.spec.js:68:5
```

# Page snapshot

```yaml
- banner:
  - img
  - list:
    - listitem: Timesheet
    - listitem: Check In
    - listitem: Tickets
    - listitem: Turn
    - listitem: Appointment
    - listitem:
      - progressbar:
        - img
      - text: Quick Sale
    - listitem: Balance
  - text: Apr 01
  - list:
    - listitem: BLANC NAILS
    - listitem:
      - paragraph: ", , | (707) 707-1122"
      - text: "Thuyen Nguyen | Station: 1"
- list
- main:
  - button "Hide Tab"
  - button "04/01/2025"
  - text: Ticket Type
  - combobox: All Types
  - searchbox "Search…": Bill
  - button "Clear"
  - grid:
    - row "Total Sale Sub Total Tip Tax Date Time User":
      - columnheader "Total Sale"
      - columnheader "Sub Total"
      - columnheader "Tip"
      - columnheader "Tax"
      - columnheader "Date"
      - columnheader "Time"
      - columnheader "User"
    - progressbar:
      - img
    - rowgroup:
      - row "$14.84 $14.00 $10.00 $0.84 04/01/2025 12:11 AM Christ":
        - gridcell "$14.84"
        - gridcell "$14.00"
        - gridcell "$10.00"
        - gridcell "$0.84"
        - gridcell "04/01/2025"
        - gridcell "12:11 AM"
        - gridcell "Christ"
      - row "$47.70 $45.00 $0.00 $2.70 04/01/2025 12:17 AM Ethan":
        - gridcell "$47.70"
        - gridcell "$45.00"
        - gridcell "$0.00"
        - gridcell "$2.70"
        - gridcell "04/01/2025"
        - gridcell "12:17 AM"
        - gridcell "Ethan"
      - row "$47.70 $45.00 $0.00 $2.70 04/01/2025 12:33 AM Ethan":
        - gridcell "$47.70"
        - gridcell "$45.00"
        - gridcell "$0.00"
        - gridcell "$2.70"
        - gridcell "04/01/2025"
        - gridcell "12:33 AM"
        - gridcell "Ethan"
      - row "$14.84 $14.00 $10.00 $0.84 04/01/2025 05:48 AM Christ":
        - gridcell "$14.84"
        - gridcell "$14.00"
        - gridcell "$10.00"
        - gridcell "$0.84"
        - gridcell "04/01/2025"
        - gridcell "05:48 AM"
        - gridcell "Christ"
      - row "$47.70 $45.00 $0.00 $2.70 04/01/2025 05:48 AM Ethan":
        - gridcell "$47.70"
        - gridcell "$45.00"
        - gridcell "$0.00"
        - gridcell "$2.70"
        - gridcell "04/01/2025"
        - gridcell "05:48 AM"
        - gridcell "Ethan"
      - row "$14.84 $14.00 $10.00 $0.84 04/01/2025 09:06 AM Christ":
        - gridcell "$14.84"
        - gridcell "$14.00"
        - gridcell "$10.00"
        - gridcell "$0.84"
        - gridcell "04/01/2025"
        - gridcell "09:06 AM"
        - gridcell "Christ"
      - row "$47.70 $45.00 $0.00 $2.70 04/01/2025 09:07 AM Ethan":
        - gridcell "$47.70"
        - gridcell "$45.00"
        - gridcell "$0.00"
        - gridcell "$2.70"
        - gridcell "04/01/2025"
        - gridcell "09:07 AM"
        - gridcell "Ethan"
      - row "$14.84 $14.00 $10.00 $0.84 04/01/2025 09:48 AM Christ":
        - gridcell "$14.84"
        - gridcell "$14.00"
        - gridcell "$10.00"
        - gridcell "$0.84"
        - gridcell "04/01/2025"
        - gridcell "09:48 AM"
        - gridcell "Christ"
      - row "$47.70 $45.00 $0.00 $2.70 04/01/2025 09:48 AM Ethan":
        - gridcell "$47.70"
        - gridcell "$45.00"
        - gridcell "$0.00"
        - gridcell "$2.70"
        - gridcell "04/01/2025"
        - gridcell "09:48 AM"
        - gridcell "Ethan"
    - row "$297.86 $281.00 $40.00 $16.86":
      - gridcell "$297.86"
      - gridcell "$281.00"
      - gridcell "$40.00"
      - gridcell "$16.86"
      - gridcell
      - gridcell
      - gridcell
- alert: xPOS Salon - Galaxy Access Inc.
```

# Test source

```ts
   865 | 		const serviceElement = page
   866 | 			.locator('.xTicketItems__content')
   867 | 			.getByText(service, { exact: true });
   868 | 		await expect(serviceElement).toHaveCount(0);
   869 | 	},
   870 | );
   871 |
   872 | When(
   873 | 	'I click the status of {string} to change done',
   874 | 	async ({ page }, service: string) => {
   875 | 		const serviceContainer = page
   876 | 			.locator('.xTicketItems__wrap')
   877 | 			.filter({ hasText: service });
   878 |
   879 | 		const waitStatusElement = serviceContainer.locator('.status:text("W")');
   880 | 		await expect(waitStatusElement).toBeVisible();
   881 |
   882 | 		await waitStatusElement.click();
   883 | 	},
   884 | );
   885 |
   886 | Then(
   887 | 	'I should see the {string} service with status done',
   888 | 	async ({ page }, service: string) => {
   889 | 		const serviceWithWaitStatus = page
   890 | 			.locator('.xTicketItems__wrap', {
   891 | 				hasText: service,
   892 | 			})
   893 | 			.filter({ has: page.locator('.status.done:text("D")') });
   894 |
   895 | 		await expect(serviceWithWaitStatus).toBeVisible();
   896 | 	},
   897 | );
   898 |
   899 | When(
   900 | 	'I click on the more menu for payment history of {string}',
   901 | 	async ({ page }, paymentMethod: string) => {
   902 | 		const paymentHistoryItem = page
   903 | 			.locator('.xPayment__history--list li')
   904 | 			.filter({ hasText: paymentMethod });
   905 |
   906 | 		await paymentHistoryItem.locator('button[aria-label="more"]').click();
   907 | 	},
   908 | );
   909 |
   910 | Then('I should see the tooltip remove', async ({ page }) => {
   911 | 	const tooltipElement = page.locator(
   912 | 		'.xPayment__history--tooltip.active .label:has-text("Remove")',
   913 | 	);
   914 | 	await expect(tooltipElement).toBeVisible();
   915 | });
   916 |
   917 | When('I click on the tooltip remove', async ({ page }) => {
   918 | 	const tooltipElement = page.locator(
   919 | 		'.xPayment__history--tooltip.active .label:has-text("Remove")',
   920 | 	);
   921 | 	await tooltipElement.click();
   922 | });
   923 |
   924 | Then(
   925 | 	'I should see the text {string} in the payment history',
   926 | 	async ({ page }, text: string) => {
   927 | 		const paymentHistoryItem = page
   928 | 			.locator('.xPayment__history--scroll')
   929 | 			.filter({ hasText: text });
   930 |
   931 | 		await expect(paymentHistoryItem).toBeVisible();
   932 | 	},
   933 | );
   934 |
   935 | When('I search for {string}', async ({ page }, text: string) => {
   936 | 	await page.locator('input[placeholder="Search…"]').fill(text);
   937 | });
   938 |
   939 | Then(
   940 | 	'I should see the last ticket of customer {string}',
   941 | 	async ({ page }, customerInfo: string) => {
   942 | 		const lastCustomerCell = page
   943 | 			.locator('.MuiDataGrid-row')
   944 | 			.locator('[data-field="customerInfo"]', { hasText: customerInfo })
   945 | 			.last();
   946 |
   947 | 		await expect(lastCustomerCell).toBeVisible();
   948 | 		await lastCustomerCell.scrollIntoViewIfNeeded();
   949 |
   950 | 		const title = await lastCustomerCell.getAttribute('title');
   951 | 		expect((title || '').trim()).toBe(customerInfo.trim());
   952 | 	},
   953 | );
   954 |
   955 | When(
   956 | 	'I click on the last row for customer {string} to expand details',
   957 | 	async ({ page }, customerInfo: string) => {
   958 | 		const resultRow = page.locator('.MuiDataGrid-row').filter({
   959 | 			has: page.locator('[data-field="customerInfo"]', {
   960 | 				hasText: customerInfo,
   961 | 			}),
   962 | 		});
   963 | 		const lastRow = resultRow.last();
   964 | 		await lastRow.scrollIntoViewIfNeeded();
>  965 | 		await lastRow.click();
       | 		              ^ Error: locator.click: Test timeout of 90000ms exceeded.
   966 | 	},
   967 | );
   968 |
   969 | Then(
   970 | 	'I should see the {string} button visible',
   971 | 	async ({ page }, text: string) => {
   972 | 		const button = page.locator('.MuiStack-root').getByText(text);
   973 | 		await expect(button).toBeVisible();
   974 | 	},
   975 | );
   976 |
   977 | When('I click on the adjust tip icon', async ({ page }) => {
   978 | 	await page.locator('.xPayment__history--listBtn').click();
   979 | });
   980 |
   981 | Then(
   982 | 	'I should see the payment price contain amount {string}',
   983 | 	async ({ page }, amount: string) => {
   984 | 		const priceElement = page.locator('.xPayment__history--price');
   985 | 		await expect(priceElement).toContainText(amount);
   986 | 	},
   987 | );
   988 |
   989 | When(
   990 | 	'I select the {string} label in the expanded list',
   991 | 	async ({ page }, label: string) => {
   992 | 		const labelElement = page
   993 | 			.locator('div.xMenu__link li')
   994 | 			.filter({ hasText: label });
   995 | 		await labelElement.click();
   996 | 	},
   997 | );
   998 |
   999 | When(
  1000 | 	'I select the first ticket with total {string}',
  1001 | 	async ({ page }, total: string) => {
  1002 | 		const ticketElement = page
  1003 | 			.locator('.MuiDataGrid-row')
  1004 | 			.first()
  1005 | 			.filter({
  1006 | 				has: page.locator('[data-field="ticketTotals"]', { hasText: total }),
  1007 | 			});
  1008 |
  1009 | 		await ticketElement.click();
  1010 | 	},
  1011 | );
  1012 |
  1013 | When('I select the {string} tab', async ({ page }, tab: string) => {
  1014 | 	const tabElement = page.getByRole('tab', { name: tab });
  1015 | 	await tabElement.click();
  1016 | });
  1017 |
  1018 | Then(
  1019 | 	'I should see the text {string} in the ticket adjustment screen',
  1020 | 	async ({ page }, text: string) => {
  1021 | 		const element = page.locator('.xEmpty').getByText(text);
  1022 | 		await expect(element).toBeVisible();
  1023 | 	},
  1024 | );
  1025 |
  1026 | Then(
  1027 | 	'I should see the {string} label in the expanded list',
  1028 | 	async ({ page }, label: string) => {
  1029 | 		const labelElement = page
  1030 | 			.locator('div.xMenu__link li')
  1031 | 			.filter({ hasText: label });
  1032 | 		await expect(labelElement).toBeVisible();
  1033 | 	},
  1034 | );
  1035 |
  1036 | When(
  1037 | 	'I click on the title {string} in the ticket adjustment screen',
  1038 | 	async ({ page }, text: string) => {
  1039 | 		const element = page.locator('.xFixTicket__main--option').getByText(text);
  1040 | 		await element.click();
  1041 | 	},
  1042 | );
  1043 |
  1044 | Then(
  1045 | 	'I should see the package item {string} in my cart',
  1046 | 	async ({ page }, service: string) => {
  1047 | 		const servicePackageItem = page
  1048 | 			.locator('.ServicePackageItem .xTicketItems__name')
  1049 | 			.getByText(service);
  1050 | 		await expect(servicePackageItem).toBeVisible();
  1051 | 		await expect(servicePackageItem).toHaveText(service);
  1052 | 	},
  1053 | );
  1054 |
  1055 | Then('I should see the detail {string}', async ({ page }, detail: string) => {
  1056 | 	const itemDetail = page.locator('.xTicketItems__detail').getByText(detail);
  1057 |
  1058 | 	await expect(itemDetail).toContainText(detail);
  1059 | });
  1060 |
  1061 | Then(
  1062 | 	'I should see multiple {string} details',
  1063 | 	async ({ page }, detail: string) => {
  1064 | 		const itemDetails = await page
  1065 | 			.locator('.xTicketItems__detail')
```