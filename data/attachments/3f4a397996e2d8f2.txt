# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Quick sale tickets >> Create a quick sale ticket
- Location: /home/circleci/project/e2e/pos-web/dist/bdd/quick-sale.feature.spec.js:6:3

# Error details

```
Error: Timed out 20000ms waiting for expect(locator).toContainText(expected)

Locator: locator('.xHeader__content')
Expected string: "Christ"
Received string: "Ticket View ...  - #001"
Call log:
  - expect.toContainText with timeout 20000ms
  - waiting for locator('.xHeader__content')
    24 × locator resolved to <div class="xHeader__content isLeftActionFunc MuiBox-root css-0">…</div>
       - unexpected value "Ticket View ...  - #001"

    at Object.<anonymous> (/home/circleci/project/e2e/pos-web/src/features/steps.ts:517:31)
    at /home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.0/node_modules/playwright-bdd/src/runtime/bddStepInvoker.ts:57:60
    at BddStepInvoker.invoke (/home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.0/node_modules/playwright-bdd/src/runtime/bddStepInvoker.ts:51:5)
    at /home/circleci/project/e2e/pos-web/dist/bdd/quick-sale.feature.spec.js:13:5
```

# Page snapshot

```yaml
- banner:
  - img
  - paragraph: Ticket View
  - paragraph: "... - #001"
  - button "UNLOCK TICKET"
  - text: Mar 17
  - list:
    - listitem: BLANC NAILS
    - listitem:
      - paragraph: ", , | (707) 707-1122"
      - text: "Thuyen Nguyen | Station: 1"
- list
- main:
  - button "search"
  - tablist:
    - tab "MANI & PEDI" [selected]
    - tab "FULL SET & FILL IN"
    - tab "GIFT CARD"
  - tabpanel:
    - list:
      - listitem: M Manicure $6.00
      - listitem: P Pedicure $8.00
      - listitem: C Cut cuticle $10.00
      - listitem: G Gel removal $40.00
      - listitem: A Acrylic removal $30.00
      - listitem: G Gel X $27.00
      - listitem: R Request price $0.00
      - listitem: C Combo 1 $45.00
      - listitem: C Combo 2 $60.00
      - listitem: S Supper combo $0.00
  - button "0" [disabled]
  - text: Select customer
  - button
  - list
  - list:
    - listitem: TECHNICIAN
    - listitem: DISCOUNT ITEM
    - listitem: COMBINE TICKET
    - listitem: VOID ITEM
  - list:
    - listitem: Tip
    - listitem: Discount
    - listitem: Tax
    - listitem: Sub Total
    - listitem: TOTAL
  - button "CANCEL"
  - button "PAY" [disabled]
- alert: Home - xPOS Salon
```

# Test source

```ts
  417 | When(
  418 | 	'I click on the {string} label in the header',
  419 | 	async ({ page }, label: string) => {
  420 | 		const labelElement = page
  421 | 			.locator('.xHeader__content')
  422 | 			.getByText(label, { exact: true });
  423 |
  424 | 		await expect(labelElement).toBeVisible();
  425 |
  426 | 		await labelElement.click();
  427 | 	},
  428 | );
  429 |
  430 | When(
  431 | 	'I click on the {string} button in the waiting page',
  432 | 	async ({ page }, buttonText: string) => {
  433 | 		const buttonElement = page
  434 | 			.locator('.xWaitingList__btn')
  435 | 			.getByRole('button', { name: buttonText });
  436 | 		await buttonElement.click();
  437 | 	},
  438 | );
  439 |
  440 | Then(
  441 | 	'I should see the service {string} in my cart',
  442 | 	async ({ page }, service: string) => {
  443 | 		const serviceElement = page
  444 | 			.locator('.xTicketItems__content')
  445 | 			.getByText(service, { exact: true });
  446 | 		await expect(serviceElement).toHaveText(service);
  447 | 	},
  448 | );
  449 |
  450 | Then(
  451 | 	'I should see the duration {string} in my cart',
  452 | 	async ({ page }, duration: string) => {
  453 | 		const durationElement = page
  454 | 			.locator('.appt-duration')
  455 | 			.getByText(duration, { exact: true });
  456 | 		await expect(durationElement).toHaveText(duration);
  457 | 	},
  458 | );
  459 |
  460 | Then(
  461 | 	'I should see the employee {string} for all items in a package in my cart',
  462 | 	async ({ page }, employee: string) => {
  463 | 		const elements = await page
  464 | 			.locator('.childService')
  465 | 			.getByText(employee, { exact: true })
  466 | 			.all();
  467 |
  468 | 		for (const element of elements) {
  469 | 			await expect(element).toHaveText(employee);
  470 | 		}
  471 | 	},
  472 | );
  473 |
  474 | Then(
  475 | 	'I should see the customer {string} in the waiting list',
  476 | 	async ({ page }, customer: string) => {
  477 | 		const customerElement = page
  478 | 			.locator('div[data-field="customerInfo"]')
  479 | 			.getByText(customer, { exact: true });
  480 | 		await expect(customerElement).toHaveText(customer);
  481 | 	},
  482 | );
  483 |
  484 | Then(
  485 | 	'I should see the service {string} in the waiting list',
  486 | 	async ({ page }, service: string) => {
  487 | 		const serviceElement = page
  488 | 			.locator('div[data-field="categoryNames"]')
  489 | 			.getByText(service, { exact: true });
  490 | 		await expect(serviceElement).toHaveText(service);
  491 | 	},
  492 | );
  493 |
  494 | Then(
  495 | 	'I should see the technician {string} in the waiting list',
  496 | 	async ({ page }, technician: string) => {
  497 | 		const technicianElement = page
  498 | 			.locator('div[data-field="technicianNickNames"]')
  499 | 			.getByText(technician, { exact: true });
  500 | 		await expect(technicianElement).toHaveText(technician);
  501 | 	},
  502 | );
  503 |
  504 | When('I enter the amount {string}', async ({ page }, amount: string) => {
  505 | 	for (const digit of amount) {
  506 | 		await page
  507 | 			.locator(`button.key:has(span.text-num:has-text("${digit}"))`)
  508 | 			.click();
  509 | 	}
  510 | });
  511 |
  512 | Then(
  513 | 	'I should see the employee {string} in the ticket',
  514 | 	async ({ page }, employee: string) => {
  515 | 		const headerContent = page.locator('.xHeader__content');
  516 |
> 517 | 		await expect(headerContent).toContainText(employee);
      | 		                            ^ Error: Timed out 20000ms waiting for expect(locator).toContainText(expected)
  518 | 	},
  519 | );
  520 |
```