# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Create tickets >> Create a ticket with multiple technicians
- Location: /home/circleci/project/e2e/pos-web/dist/bdd/create-tickets.feature.spec.js:68:3

# Error details

```
Error: locator.click: Error: strict mode violation: locator('div.xQueueList').getByText('Tina', { exact: true }) resolved to 4 elements:
    1) <span class="nickname">Tina</span> aka getByText('Tina').first()
    2) <span class="nickname">Tina</span> aka getByText('Tina').nth(1)
    3) <span class="nickname">Tina</span> aka getByText('Tina').nth(2)
    4) <span class="nickname">Tina</span> aka getByText('Tina').nth(3)

Call log:
  - waiting for locator('div.xQueueList').getByText('Tina', { exact: true })

    at HomePage.selectEmployee (/home/circleci/project/e2e/pos-web/src/steps/home.page.ts:55:18)
    at Object.fn (/home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.0/node_modules/playwright-bdd/src/steps/decorators/steps.ts:64:17)
    at /home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.0/node_modules/playwright-bdd/src/runtime/bddStepInvoker.ts:57:60
    at BddStepInvoker.invoke (/home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.0/node_modules/playwright-bdd/src/runtime/bddStepInvoker.ts:51:5)
    at /home/circleci/project/e2e/pos-web/dist/bdd/create-tickets.feature.spec.js:70:5
```

# Page snapshot

```yaml
- banner:
  - img
  - list:
    - listitem: Timesheet
    - listitem: Check In
    - listitem: Tickets
    - listitem: Turn
    - listitem: Appointment
    - listitem: Quick Sale
    - listitem: Balance
  - text: Mar 09
  - list:
    - listitem: BLANC NAILS
    - listitem:
      - paragraph: ", , | (707) 707-1122"
      - text: "Thuyen Nguyen | Station: 1"
- list
- main:
  - text: CHECK-INS No Customer
  - tablist:
    - tab "NAILS" [selected]
    - tab "HAIR"
  - tabpanel:
    - list:
      - listitem: "D #1 Dylan 07:00 AM Turn: 0.0"
      - listitem:
        - img "item service Emma"
        - text: "#2 Emma 07:00 AM Turn: 0.0"
      - listitem: "L #3 Laura 07:00 AM Turn: 0.0"
      - listitem: "D #4 Dylan 07:00 AM Turn: 0.0"
      - listitem: "C #5 Christ 07:00 AM Turn: 0.0"
      - listitem: "A #6 Anna 07:00 AM Turn: 0.0"
      - listitem: "T #7 Tina 07:00 AM Turn: 0.0"
      - listitem: "D #8 Dylan 07:00 AM Turn: 0.0"
      - listitem: "T #9 Tina 07:00 AM Turn: 0.0"
      - listitem: "L #10 Laura 07:00 AM Turn: 0.0"
      - listitem: "K #11 Kelley 07:00 AM Turn: 0.0"
      - listitem:
        - img "item service Emma"
        - text: "#12 Emma 07:00 AM Turn: 0.0"
      - listitem:
        - img "item service Emma"
        - text: "#13 Emma 07:00 AM Turn: 0.0"
      - listitem: "K #14 Kelley 07:00 AM Turn: 0.0"
      - listitem: "T #15 Tim 07:00 AM Turn: 0.0"
      - listitem: "A #16 Anna 07:00 AM Turn: 0.0"
      - listitem: "T #17 Tim 07:00 AM Turn: 0.0"
      - listitem: "C #18 Christ 07:00 AM Turn: 0.0"
      - listitem: "C #19 Christ 07:00 AM Turn: 0.0"
      - listitem: "T #20 Tim 07:00 AM Turn: 0.0"
      - listitem: "B #21 Brian 07:00 AM Turn: 0.0"
      - listitem: "T #22 Tim 07:00 AM Turn: 0.0"
      - listitem: "A #23 Anna 07:00 AM Turn: 0.0"
      - listitem: "C #24 Christ 07:00 AM Turn: 0.0"
      - listitem: "L #25 Laura 07:00 AM Turn: 0.0"
      - listitem: "K #26 Kelley 07:00 AM Turn: 0.0"
      - listitem: "T #27 Tina 07:00 AM Turn: 0.0"
      - listitem: "B #28 Brian 07:00 AM Turn: 0.0"
      - listitem: "H #29 Hanna 07:00 AM Turn: 0.0"
      - listitem: "D #30 Dylan 07:00 AM Turn: 0.0"
      - listitem: "B #31 Brian 07:00 AM Turn: 0.0"
      - listitem: "H #32 Hanna 07:00 AM Turn: 0.0"
      - listitem: "K #33 Kelley 07:00 AM Turn: 0.0"
      - listitem: "T #34 Tina 07:00 AM Turn: 0.0"
      - listitem: "L #35 Laura 07:00 AM Turn: 0.0"
      - listitem: "H #36 Hanna 07:00 AM Turn: 0.0"
      - listitem: "H #37 Hanna 07:00 AM Turn: 0.0"
      - listitem: "B #38 Brian 07:00 AM Turn: 0.0"
      - listitem:
        - img "item service Emma"
        - text: "#39 Emma 07:00 AM Turn: 0.0"
      - listitem: "A #40 Anna 07:00 AM Turn: 0.0"
      - listitem:
        - img "item service Owner"
        - text: "#41 Owner 08:46 AM Turn: 1.0"
  - button "search"
  - list:
    - listitem:
      - button "Ready"
    - listitem:
      - button "In Service"
    - listitem:
      - button "Paid"
    - listitem:
      - button "All" [disabled]
  - list:
    - listitem:
      - img "item service Owner"
      - text: "Paid #102 Owner 07:47 PM - 07:47 PM 0' Waiting $6.36"
- alert
```

# Test source

```ts
   1 | import { expect } from '@playwright/test';
   2 | import { Fixture, When } from 'playwright-bdd/decorators';
   3 |
   4 | import { constants } from '#const';
   5 | import { PageId, type TestOptions } from '#types';
   6 |
   7 | import { TicketViewPage } from './ticket-view.page';
   8 | import { xPage } from './x.page';
   9 |
  10 | export
  11 | @Fixture('homePage')
  12 | class HomePage extends xPage {
  13 | 	override open() {
  14 | 		return this.page.goto(constants.PageUrl[PageId.HOME]);
  15 | 	}
  16 |
  17 | 	/**
  18 | 	 * A list of this page specific locators
  19 | 	 */
  20 | 	public override get locators() {
  21 | 		const { page } = this;
  22 |
  23 | 		const employeeList = page.locator('div.xQueueList');
  24 | 		const ticketList = page.locator('div.ListTicket');
  25 |
  26 | 		return {
  27 | 			...super.locators,
  28 |
  29 | 			employeeList,
  30 | 			employee: (employeeName: string) =>
  31 | 				employeeList.getByText(employeeName, { exact: true }),
  32 |
  33 | 			ticketList,
  34 | 			ticketById: (ticketId: string) =>
  35 | 				ticketList.getByText(`#${ticketId}`, { exact: true }),
  36 | 		};
  37 | 	}
  38 |
  39 | 	/**
  40 | 	 * Select an on-going ticket (by its number) on the home screen
  41 | 	 */
  42 | 	public selectTicketById(id: string, { timeout }: TestOptions = {}) {
  43 | 		const { locators } = this;
  44 |
  45 | 		return locators.ticketById(id).click({ timeout });
  46 | 	}
  47 |
  48 | 	/* -------------------------------- BDD steps ------------------------------- */
  49 |
  50 | 	@When('I select the {string} employee')
  51 | 	public async selectEmployee(employeeName: string) {
  52 | 		const { locators } = this;
  53 |
  54 | 		const employee = locators.employee(employeeName);
> 55 | 		await employee.click();
     | 		               ^ Error: locator.click: Error: strict mode violation: locator('div.xQueueList').getByText('Tina', { exact: true }) resolved to 4 elements:
  56 |
  57 | 		await this.waitForResponseOfAPI('Save lock number');
  58 | 		await expect(locators.pageName).toHaveText(TicketViewPage.TITLE);
  59 |
  60 | 		const ticketViewPage = new TicketViewPage(
  61 | 			this.testConfig,
  62 | 			this.testStorage,
  63 | 			this.page,
  64 | 		);
  65 | 		const ticketNumber = await ticketViewPage.getTicketNumber();
  66 |
  67 | 		// keep track ongoing tickets, used for cleanup in case of test failure
  68 | 		ticketNumber && this.testStorage.ongoingTickets.add(ticketNumber);
  69 | 	}
  70 | }
  71 |
```