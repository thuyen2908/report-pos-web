# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Create tickets >> Void a ticket with a service in Wait status
- Location: /home/circleci/project/e2e/pos-web/dist/bdd/create-tickets.feature.spec.js:414:3

# Error details

```
Error: locator.click: Test timeout of 90000ms exceeded.
Call log:
  - waiting for locator('div.xQueueList').getByText('Kelley', { exact: true })

    at HomePage.selectEmployee (/home/circleci/project/e2e/pos-web/src/steps/home.page.ts:70:18)
    at Object.fn (/home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/steps/decorators/steps.ts:64:17)
    at /home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/runtime/bddStepInvoker.ts:57:60
    at BddStepInvoker.invoke (/home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/runtime/bddStepInvoker.ts:51:5)
    at /home/circleci/project/e2e/pos-web/dist/bdd/create-tickets.feature.spec.js:416:5
```

# Page snapshot

```yaml
- banner:
  - img
  - list:
    - listitem: Timesheet
    - listitem: Check In
    - listitem: Tickets
    - listitem: Turn
    - listitem: Appointment
    - listitem: Quick Sale
    - listitem: Balance
  - text: Mar 26
  - list:
    - listitem: BLANC NAILS
    - listitem:
      - paragraph: ", , | (707) 707-1122"
      - text: "Thuyen Nguyen | Station: 1"
- list
- main:
  - text: CHECK-INS No Customer
  - button "search"
  - list:
    - listitem:
      - button "Ready"
    - listitem:
      - button "In Service"
    - listitem:
      - button "Paid"
    - listitem:
      - button "All" [disabled]
  - text: No Ticket Found.
- alert
```

# Test source

```ts
   1 | import { expect } from '@playwright/test';
   2 | import { Fixture, When } from 'playwright-bdd/decorators';
   3 |
   4 | import { constants } from '#const';
   5 | import { PageId, type TestOptions } from '#types';
   6 |
   7 | import { TicketViewPage } from './ticket-view.page';
   8 | import { xPage } from './x.page';
   9 |
  10 | export
  11 | @Fixture('homePage')
  12 | class HomePage extends xPage {
  13 | 	override open() {
  14 | 		return this.page.goto(constants.PageUrl[PageId.HOME]);
  15 | 	}
  16 |
  17 | 	/**
  18 | 	 * A list of this page specific locators
  19 | 	 */
  20 | 	public override get locators() {
  21 | 		const { page } = this;
  22 |
  23 | 		const employeeList = page.locator('div.xQueueList');
  24 | 		const ticketList = page.locator('div.ListTicket');
  25 |
  26 | 		return {
  27 | 			...super.locators,
  28 |
  29 | 			/**
  30 | 			 * Locate the employee list section, which is the middle column of the {@link PageId.HOME} screen
  31 | 			 */
  32 | 			employeeList,
  33 | 			/**
  34 | 			 * Locate an employee by their name
  35 | 			 */
  36 | 			employee: (employeeName: string) =>
  37 | 				employeeList.getByText(employeeName, { exact: true }),
  38 |
  39 | 			/**
  40 | 			 * Locate the on-going ticket list, which is the right column of the {@link PageId.HOME} screen
  41 | 			 */
  42 | 			ticketList,
  43 | 			/**
  44 | 			 * Locate an on-going ticket by its ID
  45 | 			 */
  46 | 			ticketById: (ticketId: string) =>
  47 | 				ticketList.getByText(`#${ticketId}`, { exact: true }),
  48 | 		};
  49 | 	}
  50 |
  51 | 	/**
  52 | 	 * Select an on-going ticket (by its number) on the home screen
  53 | 	 */
  54 | 	public selectTicketById(id: string, { timeout }: TestOptions = {}) {
  55 | 		const { locators } = this;
  56 |
  57 | 		return locators.ticketById(id).click({ timeout });
  58 | 	}
  59 |
  60 | 	/* -------------------------------- BDD steps ------------------------------- */
  61 |
  62 | 	/**
  63 | 	 * Select an employee on {@link PageId.HOME} screen
  64 | 	 */
  65 | 	@When('I select the {string} employee')
  66 | 	public async selectEmployee(employeeName: string) {
  67 | 		const { locators } = this;
  68 |
  69 | 		const employee = locators.employee(employeeName);
> 70 | 		await employee.click();
     | 		               ^ Error: locator.click: Test timeout of 90000ms exceeded.
  71 |
  72 | 		await this.waitForResponseOfAPI('Save lock number');
  73 | 		await expect(locators.pageName).toHaveText(TicketViewPage.TITLE);
  74 |
  75 | 		const ticketViewPage = new TicketViewPage(
  76 | 			this.testConfig,
  77 | 			this.testStorage,
  78 | 			this.page,
  79 | 		);
  80 | 		const ticketNumber = await ticketViewPage.getTicketNumber();
  81 |
  82 | 		// keep track ongoing tickets, used for cleanup in case of test failure
  83 | 		ticketNumber && this.testStorage.ongoingTickets.add(ticketNumber);
  84 | 	}
  85 | }
  86 |
```