# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Reopen tickets >> Reopen ticket then close ticket
- Location: /home/circleci/project/e2e/pos-web/dist/bdd/reopen-ticket.feature.spec.js:6:3

# Error details

```
Error: locator.click: Test timeout of 90000ms exceeded.
Call log:
  - waiting for locator('.MuiDataGrid-row').filter({ has: locator('[data-field="customerInfo"]').filter({ hasText: 'Riley' }) }).last()
    - locator resolved to <div role="row" data-rowindex="13" aria-rowindex="15" aria-selected="false" class="super-app-theme-- MuiDataGrid-row" data-id="corp11.store517.be4b1e42-a287-4035-b6ee-29f2ff19dafa">…</div>
  - attempting click action
    2 × waiting for element to be visible, enabled and stable
      - element is visible, enabled and stable
      - scrolling into view if needed
      - done scrolling
      - <div class="MuiDataGrid-overlay css-14349d1">…</div> from <div class="MuiDataGrid-overlayWrapper css-1m9ok7y">…</div> subtree intercepts pointer events
    - retrying click action
    - waiting 20ms
    - waiting for element to be visible, enabled and stable
  - element was detached from the DOM, retrying

    at Object.<anonymous> (/home/circleci/project/e2e/pos-web/src/features/steps.ts:965:17)
    at /home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/runtime/bddStepInvoker.ts:57:22
    at BddStepInvoker.invoke (/home/circleci/project/node_modules/.pnpm/playwright-bdd@8.2.1_@cucumber+message-streams@4.0.1_@cucumber+messages@27.0.2__@playwright+test@1.51.1/node_modules/playwright-bdd/src/runtime/bddStepInvoker.ts:51:5)
    at /home/circleci/project/e2e/pos-web/dist/bdd/reopen-ticket.feature.spec.js:31:5
```

# Page snapshot

```yaml
- banner:
  - img
  - list:
    - listitem: Timesheet
    - listitem: Check In
    - listitem: Tickets
    - listitem: Turn
    - listitem: Appointment
    - listitem: Quick Sale
    - listitem: Balance
  - text: Mar 27
  - list:
    - listitem: BLANC NAILS
    - listitem:
      - paragraph: ", , | (707) 707-1122"
      - text: "Thuyen Nguyen | Station: 1"
- list
- main:
  - button "Hide Tab"
  - button "03/27/2025"
  - text: Ticket Type
  - combobox: All Types
  - searchbox "Search…": Riley
  - button "Clear"
  - grid:
    - row "Total Sale Sub Total Tip Tax Date Time User":
      - columnheader "Total Sale"
      - columnheader "Sub Total"
      - columnheader "Tip"
      - columnheader "Tax"
      - columnheader "Date"
      - columnheader "Time"
      - columnheader "User"
    - rowgroup:
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 12:34 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "12:34 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 12:34 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "12:34 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 01:10 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "01:10 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 12:57 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "12:57 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 12:58 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "12:58 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 01:20 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "01:20 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 02:06 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "02:06 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 08:53 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "08:53 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 02:10 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "02:10 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 05:48 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "05:48 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 09:16 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "09:16 AM"
        - gridcell "Chloe"
      - row "$6.36 $6.00 $0.00 $0.36 03/27/2025 09:17 AM Chloe":
        - gridcell "$6.36"
        - gridcell "$6.00"
        - gridcell "$0.00"
        - gridcell "$0.36"
        - gridcell "03/27/2025"
        - gridcell "09:17 AM"
        - gridcell "Chloe"
    - row "$63.60 $60.00 $0.00 $3.60":
      - gridcell "$63.60"
      - gridcell "$60.00"
      - gridcell "$0.00"
      - gridcell "$3.60"
      - gridcell
      - gridcell
      - gridcell
- alert: Home - xPOS Salon
```

# Test source

```ts
  865 | 		const serviceElement = page
  866 | 			.locator('.xTicketItems__content')
  867 | 			.getByText(service, { exact: true });
  868 | 		await expect(serviceElement).toHaveCount(0);
  869 | 	},
  870 | );
  871 |
  872 | When(
  873 | 	'I click the status of {string} to change done',
  874 | 	async ({ page }, service: string) => {
  875 | 		const serviceContainer = page
  876 | 			.locator('.xTicketItems__wrap')
  877 | 			.filter({ hasText: service });
  878 |
  879 | 		const waitStatusElement = serviceContainer.locator('.status:text("W")');
  880 | 		await expect(waitStatusElement).toBeVisible();
  881 |
  882 | 		await waitStatusElement.click();
  883 | 	},
  884 | );
  885 |
  886 | Then(
  887 | 	'I should see the {string} service with status done',
  888 | 	async ({ page }, service: string) => {
  889 | 		const serviceWithWaitStatus = page
  890 | 			.locator('.xTicketItems__wrap', {
  891 | 				hasText: service,
  892 | 			})
  893 | 			.filter({ has: page.locator('.status.done:text("D")') });
  894 |
  895 | 		await expect(serviceWithWaitStatus).toBeVisible();
  896 | 	},
  897 | );
  898 |
  899 | When(
  900 | 	'I click on the more menu for payment history of {string}',
  901 | 	async ({ page }, paymentMethod: string) => {
  902 | 		const paymentHistoryItem = page
  903 | 			.locator('.xPayment__history--list li')
  904 | 			.filter({ hasText: paymentMethod });
  905 |
  906 | 		await paymentHistoryItem.locator('button[aria-label="more"]').click();
  907 | 	},
  908 | );
  909 |
  910 | Then('I should see the tooltip remove', async ({ page }) => {
  911 | 	const tooltipElement = page.locator(
  912 | 		'.xPayment__history--tooltip.active .label:has-text("Remove")',
  913 | 	);
  914 | 	await expect(tooltipElement).toBeVisible();
  915 | });
  916 |
  917 | When('I click on the tooltip remove', async ({ page }) => {
  918 | 	const tooltipElement = page.locator(
  919 | 		'.xPayment__history--tooltip.active .label:has-text("Remove")',
  920 | 	);
  921 | 	await tooltipElement.click();
  922 | });
  923 |
  924 | Then(
  925 | 	'I should see the text {string} in the payment history',
  926 | 	async ({ page }, text: string) => {
  927 | 		const paymentHistoryItem = page
  928 | 			.locator('.xPayment__history--scroll')
  929 | 			.filter({ hasText: text });
  930 |
  931 | 		await expect(paymentHistoryItem).toBeVisible();
  932 | 	},
  933 | );
  934 |
  935 | When('I search for {string}', async ({ page }, text: string) => {
  936 | 	await page.locator('input[placeholder="Search…"]').fill(text);
  937 | });
  938 |
  939 | Then(
  940 | 	'I should see the last ticket of customer {string}',
  941 | 	async ({ page }, customerInfo: string) => {
  942 | 		const lastCustomerCell = page
  943 | 			.locator('.MuiDataGrid-row')
  944 | 			.locator('[data-field="customerInfo"]', { hasText: customerInfo })
  945 | 			.last();
  946 |
  947 | 		await expect(lastCustomerCell).toBeVisible();
  948 | 		await lastCustomerCell.scrollIntoViewIfNeeded();
  949 |
  950 | 		const title = await lastCustomerCell.getAttribute('title');
  951 | 		expect((title || '').trim()).toBe(customerInfo.trim());
  952 | 	},
  953 | );
  954 |
  955 | When(
  956 | 	'I click on the last row for customer {string} to expand details',
  957 | 	async ({ page }, customerInfo: string) => {
  958 | 		const resultRow = page.locator('.MuiDataGrid-row').filter({
  959 | 			has: page.locator('[data-field="customerInfo"]', {
  960 | 				hasText: customerInfo,
  961 | 			}),
  962 | 		});
  963 | 		const lastRow = resultRow.last();
  964 | 		await lastRow.scrollIntoViewIfNeeded();
> 965 | 		await lastRow.click();
      | 		              ^ Error: locator.click: Test timeout of 90000ms exceeded.
  966 | 	},
  967 | );
  968 |
  969 | Then(
  970 | 	'I should see the {string} button visible',
  971 | 	async ({ page }, text: string) => {
  972 | 		const button = page.locator('.MuiStack-root').getByText(text);
  973 | 		await expect(button).toBeVisible();
  974 | 	},
  975 | );
  976 |
  977 | When('I click on the adjust tip icon', async ({ page }) => {
  978 | 	await page.locator('.xPayment__history--listBtn').click();
  979 | });
  980 |
  981 | Then(
  982 | 	'I should see the payment price contain amount {string}',
  983 | 	async ({ page }, amount: string) => {
  984 | 		const priceElement = page.locator('.xPayment__history--price');
  985 | 		await expect(priceElement).toContainText(amount);
  986 | 	},
  987 | );
  988 |
```